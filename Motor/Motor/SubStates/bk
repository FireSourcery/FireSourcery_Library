// static inline int Motor_Var_ConfigCalibration_Get(const Motor_T * p_motor, int varId) { return _Motor_Var_ConfigCalibration_Get(p_motor->P_MOTOR_STATE, (Motor_Var_ConfigCalibration_T)varId); }
// static inline int Motor_Var_ConfigActuation_Get(const Motor_T * p_motor, int varId) { return _Motor_Var_ConfigActuation_Get(p_motor->P_MOTOR_STATE, (Motor_Var_ConfigActuation_T)varId); }
// static inline int Motor_Var_ConfigPid_Get(const Motor_T * p_motor, int varId) { return _Motor_Var_ConfigPid_Get(p_motor->P_MOTOR_STATE, (Motor_Var_ConfigPid_T)varId); }
// static inline int Motor_Var_ConfigCalibrationAlias_Get(const Motor_T * p_motor, int varId) { return _Motor_Var_ConfigCalibrationAlias_Get(p_motor->P_MOTOR_STATE, (Motor_Var_ConfigCalibrationAlias_T)varId); }

// static inline void Motor_Var_ConfigCalibration_Set(const Motor_T * p_motor, int varId, int varValue) { _Motor_Var_ConfigCalibration_Set(p_motor->P_MOTOR_STATE, (Motor_Var_ConfigCalibration_T)varId, varValue); }
// static inline void Motor_Var_ConfigActuation_Set(const Motor_T * p_motor, int varId, int varValue) { _Motor_Var_ConfigActuation_Set(p_motor->P_MOTOR_STATE, (Motor_Var_ConfigActuation_T)varId, varValue); }
// static inline void Motor_Var_ConfigPid_Set(const Motor_T * p_motor, int varId, int varValue) { _Motor_Var_ConfigPid_Set(p_motor->P_MOTOR_STATE, (Motor_Var_ConfigPid_T)varId, varValue); }
// static inline void Motor_Var_ConfigCmd_Call(const Motor_T * p_motor, int varId, int varValue) { _Motor_Var_ConfigCmd_Call(p_motor, (Motor_Var_ConfigCmd_T)varId, varValue); }

// // const State_GetField_T MOTOR_CONFIG_GETTER_TABLE[MOTOR_CONFIG_ACCESSOR_TABLE_LENGTH] =
// // {
// //     [MSM_ACCESSOR_CONFIG_GET]           = (State_GetField_T)Motor_Config_Get,
// //     [MSM_ACCESSOR_CONFIG_SET]           = (State_GetField_T)Motor_Config_Set,
// // };

// const State_GetField_T MOTOR_CONFIG_GETTER_TABLE[MOTOR_CONFIG_ACCESSOR_TABLE_LENGTH] =
// {
//     [MSM_ACCESSOR_CONFIG_CALIBRATION]           = (State_GetField_T)Motor_Var_ConfigCalibration_Get,
//     [MSM_ACCESSOR_CONFIG_ACTUATION]             = (State_GetField_T)Motor_Var_ConfigActuation_Get,
//     [MSM_ACCESSOR_CONFIG_PID]                   = (State_GetField_T)Motor_Var_ConfigPid_Get,
//     [MSM_ACCESSOR_CONFIG_CMD]                   = (State_GetField_T)NULL,
//     // [MSM_ACCESSOR_CONFIG_CALIBRATION_ALIAS]     = (State_GetField_T)Motor_Var_ConfigCalibrationAlias_Get,
// };

// const State_SetField_T MOTOR_CONFIG_SETTER_TABLE[MOTOR_CONFIG_ACCESSOR_TABLE_LENGTH] =
// {
//     [MSM_ACCESSOR_CONFIG_CALIBRATION]           = (State_SetField_T)Motor_Var_ConfigCalibration_Set,
//     [MSM_ACCESSOR_CONFIG_ACTUATION]             = (State_SetField_T)Motor_Var_ConfigActuation_Set,
//     [MSM_ACCESSOR_CONFIG_PID]                   = (State_SetField_T)Motor_Var_ConfigPid_Set,
//     [MSM_ACCESSOR_CONFIG_CMD]                   = (State_SetField_T)Motor_Var_ConfigCmd_Call,
//     // [MSM_ACCESSOR_CONFIG_CALIBRATION_ALIAS]     = (State_SetField_T)NULL,
// };




// typedef enum Motor_State_Accessor
// {
//     MSM_ACCESSOR_CONFIG_CALIBRATION,
//     MSM_ACCESSOR_CONFIG_CALIBRATION_ALIAS,
//     MSM_ACCESSOR_CONFIG_ACTUATION,
//     MSM_ACCESSOR_CONFIG_PID,
//     MSM_ACCESSOR_CONFIG_CMD,
//     MSM_ACCESSOR_PID_TUNING,

//     MSM_ACCESSOR_CONFIG_SENSOR_CMD,
//     MSM_ACCESSOR_CONFIG_HEAT_MONITOR,
//     MSM_ACCESSOR_CONFIG_THERMISTOR,

//     _MOTOR_CONFIG_ACCESSOR_TABLE_LENGTH,
// }
// Motor_State_Accessor_T;


// #define MOTOR_CONFIG_ACCESSOR_TABLE_LENGTH (9U)

// static inline bool Motor_Var_ValidateConfigAccess(const Motor_T * p_motor, Motor_State_Accessor_T accessorId)
// {
//     return (p_motor != NULL) && (accessorId < MOTOR_CONFIG_ACCESSOR_TABLE_LENGTH);
// }

// static inline void Motor_Var_SetConfig(const Motor_T * p_motor, Motor_State_Accessor_T accessorId, int varId, int varValue)
// {
//     if (Motor_Var_ValidateConfigAccess(p_motor, accessorId)) { StateMachine_Set(&p_motor->STATE_MACHINE, accessorId, varId, varValue); }
// }

// static inline int Motor_Var_GetConfig(const Motor_T * p_motor, Motor_State_Accessor_T accessorId, int varId)
// {
//     return (Motor_Var_ValidateConfigAccess(p_motor, accessorId)) ? StateMachine_Get(&p_motor->STATE_MACHINE, accessorId, varId) : 0;
// }
