
	/*
		Active conversion as first conversion to support Enqueue Front (without shifting all items in queue).
		Also use as ADC active flag. breaks fifo
	*/
	//	const Analog_QueueItem_T * p_ActiveConversion; 	/*! Queue unit type selected conversion group in process */

	// todo prioity queue?
/*
	will break fifo
	use active conversion for 1 item prioirty q,
	can overwrite last item

	switch foir priority queues?
*/
bool Analog_EnqueueFrontConversion(Analog_T * p_analog, const Analog_ConversionChannel_T * p_conversion)
{
//	bool isSuccess = false; //todo
	_Analog_EnterCritical(p_analog);

	if (_Analog_GetIsActive(p_analog) == false)
	{
//		p_analog->p_ActiveConversion = p_conversion;
		_Analog_ActivateConversion(p_analog, p_conversion);//, &p_conversion->ADC_CONVERSION, &p_conversion->MAP);
	}
	else
	{
		if (Queue_GetIsFull(&p_analog->ConversionQueue) == true)
		{
			Queue_RemoveBack(&p_analog->ConversionQueue, 1U);
		}
		Queue_PushFront(&p_analog->ConversionQueue, &p_conversion);
		p_analog->ActiveConversionCount = 0U;
		p_analog->ActiveConversionIndex = 0U;
		//Active conversion will end and dequeue this conversion.
		//the following conversion will restore options as the initial conversion
	}

	_Analog_ExitCritical(p_analog);

	return true;
}


/*
	Dequeue if no conversions are active.
	For Active conversion chain dequeue is out of sync
*/
bool Analog_PollQueue(Analog_T * p_analog)
{
	bool isSuccess = false;
	const Analog_Conversion_T * p_conversion;

	if(Ring_GetIsEmpty(&p_analog->ConversionQueue) == false) /* Preliminary check */
	{
		_Analog_EnterCritical(p_analog);
		if(Queue_PeekFront(&p_analog->ConversionQueue, &p_conversion) == true) //&& not active
		{
			_Analog_ActivateConversion(p_analog, p_conversion);
			isSuccess = true;
		}
		_Analog_ExitCritical(p_analog);
	}

	return isSuccess;
}


